% CONSTANTS
epsilon = 1e-12;
alpha = 1;
last2_thresh = 0.8;
angle_thresh = 0.5;
rho_thresh = 0.5;
iterations = 100;
max_dist_point = 1;
e_max = 1;
gamma_sqr = 1;

alpha_factor = .1;
point_factor = .4;

% read data
% content of a column in Li or Lj:
%
% point_on_line_x
% point_on_line_y
% normal_x
% normal_y
% rho
% angle
% ex_1_x
% ex_1_y
% ex_2_x
% ex_2_y
Pi = readFromFile("convertedLines_0.txt");
Pj = readFromFile("convertedLines_1.txt");
%Pi = readFromFile("convertedLines_1.txt");
%Pj = readFromFile("convertedLines_2.txt");
Pi(1:2,:)=0.5*(Pi(7:8,:)+Pi(9:10,:))
Pj(1:2,:)=0.5*(Pj(7:8,:)+Pj(9:10,:))

% initial homogeneous matrix
prova_v = [0.25 0.25 0.35]';
%T = v2t(prova_v);
T = eye(3);

% initial matrices
Li = Pi(1:10, :);
Lj = Pj(1:10, :);

assoc = [];
dist = [];

temp_li = zeros(10,1);
temp_lj = zeros(10,1);

% loop
for i=1:iterations
	ne_i = zeros(6, size(Li, 2));
	ne_j = zeros(6, size(Lj, 2));
	
	ne_i(1:2, :) = Li(3:4, :);
	ne_i(3:6, :) = Li(7:10, :);
	ne_j(1:2, :) = Lj(3:4, :);
	ne_j(3:6, :) = Lj(7:10, :);
	rho_theta_i = Li(5:6, :);
	rho_theta_j = Lj(5:6, :);
	points_pi = Li(1:2, :);
	points_pj = Lj(1:2, :);

	% matrix of distances
	temp_dist = computeDistanceNM (ne_i, ne_j, alpha_factor, point_factor, T, rho_theta_i, rho_theta_j, angle_thresh, rho_thresh,     									   points_pi, points_pj, max_dist_point);

	if (i==iterations/2)
		alpha=0;
	endif	

	% associations
	temp_assoc = computeAssociations(temp_dist, last2_thresh);
	if(size(temp_assoc, 1) < 3)
		disp("me fermo");
		size(temp_assoc, 1)
		break;
	else
		assoc = temp_assoc;
		dist = temp_dist;
	endif
	
	% new matrices
	temp_li = zeros(10,size(assoc, 1));
	temp_lj = zeros(10,size(assoc, 1));
	Z = zeros(8,size(assoc, 1));
	%Z = compose_Z(Li, Lj, assoc);
	
	for j=1:size(assoc, 1)
		assoc_row = assoc(j, :);
		temp_li(:,j)=Li(1:10, assoc_row(1));
		temp_lj(:,j)=Lj(1:10, assoc_row(2));
		Z(1:4,j)=Li(1:4, assoc_row(1));
		Z(5:8,j)=Lj(1:4, assoc_row(2));
	endfor

	%Z = [temp_li(1:4,:); temp_lj(1:4,:)];
	%Z = compose_Z(Li, Lj, assoc);

	
	%xnew = 0;
	#for k=0:10
		[xnew, chiNew]=lsIteration_gamma(t2v(T), Z, epsilon, alpha, gamma_sqr);
		T = v2t(xnew);
	#endfor

	%{
	s = sprintf("/home/ubisum/tesi/prova_octave/prova/prova_%d.txt", i);
	fid_gnuplot = fopen(s, 'w');
	s_file = sprintf("'prova_%d.txt w l',", i);
	fprintf(fid_gnuplot, s_file);
	printLines(Pj(7:10, :), s, inv(T));
	%}
	
endfor

% print lines
real_T = [0.101 0 0]';
printLines(Pi(7:10, :), 'Pi.txt', eye(3));
printLines(Pj(7:10, :), 'Pj.txt', T);
%printLines(Pj(7:10, :), 'Pj.txt', v2t(real_T));
printLines(Pj(7:10, :), 'Pj_original.txt', eye(3));
printAssoc(temp_li, temp_lj, T, 'assoc_list.txt');
t2v(T)
printf("FATTO\n");

